// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios13-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AppBoxCore
@_exported import AppBoxCore
import CommonCrypto
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_spi(AppBoxNotification_Internal) public protocol AppBoxCoreProtocol {
  @_spi(AppBoxNotification_Internal) func coreGetPushInfo(completion: @escaping (Swift.Result<AppBoxCore.AppPushInfoApiModel, any Swift.Error>) -> Swift.Void)
  @_spi(AppBoxNotification_Internal) func coreSaveDeviceToken(_ token: Swift.String, pushYn: Swift.Bool?, completion: @escaping (Swift.Result<AppBoxCore.AppPushTokenApiModel, any Swift.Error>) -> Swift.Void)
  @_spi(AppBoxNotification_Internal) func coreSavePushOpen(notiModel: AppBoxCore.AppboxNotificationModel, completion: @escaping (Swift.Result<AppBoxCore.AppPushOpenApiModel, any Swift.Error>) -> Swift.Void)
  @_spi(AppBoxNotification_Internal) func coreSaveProjectId(_ projectId: Swift.String)
  @_spi(AppBoxNotification_Internal) func coreGetProjectId() -> Swift.String?
  @_spi(AppBoxNotification_Internal) func coreSavePushToken(_ pushToken: Swift.String)
  @_spi(AppBoxNotification_Internal) func coreGetPushToken() -> Swift.String?
  @_spi(AppBoxNotification_Internal) func coreSaveDebugMode(_ isDebug: Swift.Bool)
}
@_spi(AppBoxNotification_Internal) extension AppBoxCore.AppBoxCoreProtocol {
  @_spi(AppBoxNotification_Internal) public func coreGetPushInfo(completion: @escaping (Swift.Result<AppBoxCore.AppPushInfoApiModel, any Swift.Error>) -> Swift.Void)
  @_spi(AppBoxNotification_Internal) public func coreSaveDeviceToken(_ token: Swift.String, pushYn: Swift.Bool?, completion: @escaping (Swift.Result<AppBoxCore.AppPushTokenApiModel, any Swift.Error>) -> Swift.Void)
  @_spi(AppBoxNotification_Internal) public func coreSavePushOpen(notiModel: AppBoxCore.AppboxNotificationModel, completion: @escaping (Swift.Result<AppBoxCore.AppPushOpenApiModel, any Swift.Error>) -> Swift.Void)
  @_spi(AppBoxNotification_Internal) public func coreSaveProjectId(_ projectId: Swift.String)
  @_spi(AppBoxNotification_Internal) public func coreGetProjectId() -> Swift.String?
  @_spi(AppBoxNotification_Internal) public func coreSavePushToken(_ pushToken: Swift.String)
  @_spi(AppBoxNotification_Internal) public func coreGetPushToken() -> Swift.String?
  @_spi(AppBoxNotification_Internal) public func coreSaveDebugMode(_ isDebug: Swift.Bool)
}
@_spi(AppBoxNotification_Internal) public enum ErrorHandler : Swift.Error {
  @_spi(AppBoxNotification_Internal) case noProjectId
  @_spi(AppBoxNotification_Internal) case preventDuplicate
  @_spi(AppBoxNotification_Internal) case validInit
  @_spi(AppBoxNotification_Internal) case alreadyExcute
  @_spi(AppBoxNotification_Internal) case validIdx
  @_spi(AppBoxNotification_Internal) case validEncrypt
  @_spi(AppBoxNotification_Internal) case validUrl
  @_spi(AppBoxNotification_Internal) case validBundleId
  @_spi(AppBoxNotification_Internal) case ServerError(Swift.String)
  @_spi(AppBoxNotification_Internal) case unknown
  @_spi(AppBoxNotification_Internal) public var errorCode: Swift.Int {
    @_spi(AppBoxNotification_Internal) get
  }
  @_spi(AppBoxNotification_Internal) public static var allErrorCodes: [Swift.Int] {
    @_spi(AppBoxNotification_Internal) get
  }
  @_spi(AppBoxNotification_Internal) public var errorMessgae: Swift.String {
    @_spi(AppBoxNotification_Internal) get
  }
}
@_spi(AppBoxNotification_Internal) @_hasMissingDesignatedInitializers public class AppBoxCoreFramework {
  @_spi(AppBoxNotification_Internal) public static let shared: any AppBoxCore.AppBoxCoreProtocol
  @_spi(AppBoxNotification_Internal) @objc deinit
}
@_spi(AppBoxNotification_Internal) public func debugLog(_ message: Swift.String, functionName: Swift.String = #function, fileName: Swift.String = #file, lineNumber: Swift.Int = #line, isWarning: Swift.Bool = false)
@_spi(AppBoxNotification_Internal) public class AppPushTokenApiModel : Swift.Codable {
  @_spi(AppBoxNotification_Internal) final public let success: Swift.Bool
  @_spi(AppBoxNotification_Internal) final public let message: Swift.String
  @_spi(AppBoxNotification_Internal) required public init(from decoder: any Swift.Decoder) throws
  @_spi(AppBoxNotification_Internal) @objc deinit
  @_spi(AppBoxNotification_Internal) public func encode(to encoder: any Swift.Encoder) throws
}
@_spi(AppBoxNotification_Internal) public class AppboxNotificationModel {
  @_spi(AppBoxNotification_Internal) final public let param: Swift.String
  @_spi(AppBoxNotification_Internal) final public let idx: Swift.String
  @_spi(AppBoxNotification_Internal) public init?(userInfo: [Swift.AnyHashable : Any])
  @_spi(AppBoxNotification_Internal) @objc deinit
}
@_spi(AppBoxNotification_Internal) public class AppPushOpenApiModel : Swift.Codable {
  @_spi(AppBoxNotification_Internal) final public let success: Swift.Bool
  @_spi(AppBoxNotification_Internal) final public let message: Swift.String
  @_spi(AppBoxNotification_Internal) required public init(from decoder: any Swift.Decoder) throws
  @_spi(AppBoxNotification_Internal) @objc deinit
  @_spi(AppBoxNotification_Internal) public func encode(to encoder: any Swift.Encoder) throws
}
@_spi(AppBoxNotification_Internal) public class AppPushInfoApiModel : Swift.Codable {
  @_spi(AppBoxNotification_Internal) final public let success: Swift.Bool
  @_spi(AppBoxNotification_Internal) final public let firebase_info: AppBoxCore.Firebase_info
  @_spi(AppBoxNotification_Internal) final public let message: Swift.String
  @_spi(AppBoxNotification_Internal) required public init(from decoder: any Swift.Decoder) throws
  @_spi(AppBoxNotification_Internal) @objc deinit
  @_spi(AppBoxNotification_Internal) public func encode(to encoder: any Swift.Encoder) throws
}
@_spi(AppBoxNotification_Internal) public class Firebase_info : Swift.Codable {
  @_spi(AppBoxNotification_Internal) final public let project_id: Swift.String
  @_spi(AppBoxNotification_Internal) final public let app_id: Swift.String
  @_spi(AppBoxNotification_Internal) final public let api_key: Swift.String
  @_spi(AppBoxNotification_Internal) final public let sender_id: Swift.String
  @_spi(AppBoxNotification_Internal) required public init(from decoder: any Swift.Decoder) throws
  @_spi(AppBoxNotification_Internal) @objc deinit
  @_spi(AppBoxNotification_Internal) public func encode(to encoder: any Swift.Encoder) throws
}
